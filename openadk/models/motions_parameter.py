# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openadk.models.base_model_ import Model
from openadk import util


class MotionsParameter(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name=None, direction=None, repeat=1, speed=None):  # noqa: E501
        """MotionsParameter - a model defined in Swagger

        :param name: The name of this MotionsParameter.  # noqa: E501
        :type name: str
        :param direction: The direction of this MotionsParameter.  # noqa: E501
        :type direction: str
        :param repeat: The repeat of this MotionsParameter.  # noqa: E501
        :type repeat: int
        :param speed: The speed of this MotionsParameter.  # noqa: E501
        :type speed: str
        """
        self.swagger_types = {
            'name': str,
            'direction': str,
            'repeat': int,
            'speed': str
        }

        self.attribute_map = {
            'name': 'name',
            'direction': 'direction',
            'repeat': 'repeat',
            'speed': 'speed'
        }

        self._name = name
        self._direction = direction
        self._repeat = repeat
        self._speed = speed

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MotionsParameter of this MotionsParameter.  # noqa: E501
        :rtype: MotionsParameter
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this MotionsParameter.

        动作名称,除了内置动作还有:raise/crouch/stretch/come on/wave/bend/walk/turn around/head/bow  # noqa: E501

        :return: The name of this MotionsParameter.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MotionsParameter.

        动作名称,除了内置动作还有:raise/crouch/stretch/come on/wave/bend/walk/turn around/head/bow  # noqa: E501

        :param name: The name of this MotionsParameter.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def direction(self):
        """Gets the direction of this MotionsParameter.

        部分动作有方向属性，取值说明：（1）left 只适用于name取值为raise, stretch, come on, wave, bend, turn around, walk, head；（2）right 只适用于name取值为：raise, stretch, come on, wave, bend, turn around, walk, head；（3）both  只适用于name取值为：raise, stretch, come on, wave；（4）front 只适用于name取值为：walk, head；（5）back 只适用name取值为： walk；  # noqa: E501

        :return: The direction of this MotionsParameter.
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this MotionsParameter.

        部分动作有方向属性，取值说明：（1）left 只适用于name取值为raise, stretch, come on, wave, bend, turn around, walk, head；（2）right 只适用于name取值为：raise, stretch, come on, wave, bend, turn around, walk, head；（3）both  只适用于name取值为：raise, stretch, come on, wave；（4）front 只适用于name取值为：walk, head；（5）back 只适用name取值为： walk；  # noqa: E501

        :param direction: The direction of this MotionsParameter.
        :type direction: str
        """
        allowed_values = ["left", "right", "both", "front", "back"]  # noqa: E501
        if direction not in allowed_values:
            raise ValueError(
                "Invalid value for `direction` ({0}), must be one of {1}"
                .format(direction, allowed_values)
            )

        self._direction = direction

    @property
    def repeat(self):
        """Gets the repeat of this MotionsParameter.

        动作重复执行的次数  # noqa: E501

        :return: The repeat of this MotionsParameter.
        :rtype: int
        """
        return self._repeat

    @repeat.setter
    def repeat(self, repeat):
        """Sets the repeat of this MotionsParameter.

        动作重复执行的次数  # noqa: E501

        :param repeat: The repeat of this MotionsParameter.
        :type repeat: int
        """
        if repeat is not None and repeat > 100:  # noqa: E501
            raise ValueError("Invalid value for `repeat`, must be a value less than or equal to `100`")  # noqa: E501
        if repeat is not None and repeat < 1:  # noqa: E501
            raise ValueError("Invalid value for `repeat`, must be a value greater than or equal to `1`")  # noqa: E501

        self._repeat = repeat

    @property
    def speed(self):
        """Gets the speed of this MotionsParameter.

        部分动作(raise/crouch/stretch/come on/wave/bend/walk/turn around/head/bow)可设置运动速度  # noqa: E501

        :return: The speed of this MotionsParameter.
        :rtype: str
        """
        return self._speed

    @speed.setter
    def speed(self, speed):
        """Sets the speed of this MotionsParameter.

        部分动作(raise/crouch/stretch/come on/wave/bend/walk/turn around/head/bow)可设置运动速度  # noqa: E501

        :param speed: The speed of this MotionsParameter.
        :type speed: str
        """
        allowed_values = ["very slow", "slow", "normal", "fast", "very fast"]  # noqa: E501
        if speed not in allowed_values:
            raise ValueError(
                "Invalid value for `speed` ({0}), must be one of {1}"
                .format(speed, allowed_values)
            )

        self._speed = speed
