# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openadk.models.base_model_ import Model
from openadk import util


class SubscriptionVoiceResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, code=None, type=None, data=None, timestamp=None, msg=None):  # noqa: E501
        """SubscriptionVoiceResponse - a model defined in Swagger

        :param code: The code of this SubscriptionVoiceResponse.  # noqa: E501
        :type code: int
        :param type: The type of this SubscriptionVoiceResponse.  # noqa: E501
        :type type: str
        :param data: The data of this SubscriptionVoiceResponse.  # noqa: E501
        :type data: object
        :param timestamp: The timestamp of this SubscriptionVoiceResponse.  # noqa: E501
        :type timestamp: long
        :param msg: The msg of this SubscriptionVoiceResponse.  # noqa: E501
        :type msg: str
        """
        self.swagger_types = {
            'code': int,
            'type': str,
            'data': object,
            'timestamp': long,
            'msg': str
        }

        self.attribute_map = {
            'code': 'code',
            'type': 'type',
            'data': 'data',
            'timestamp': 'timestamp',
            'msg': 'msg'
        }

        self._code = code
        self._type = type
        self._data = data
        self._timestamp = timestamp
        self._msg = msg

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SubscriptionVoiceResponse of this SubscriptionVoiceResponse.  # noqa: E501
        :rtype: SubscriptionVoiceResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this SubscriptionVoiceResponse.

        Return code. 0 means success.  # noqa: E501

        :return: The code of this SubscriptionVoiceResponse.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this SubscriptionVoiceResponse.

        Return code. 0 means success.  # noqa: E501

        :param code: The code of this SubscriptionVoiceResponse.
        :type code: int
        """
        if code is None:
            raise ValueError("Invalid value for `code`, must not be `None`")  # noqa: E501

        self._code = code

    @property
    def type(self):
        """Gets the type of this SubscriptionVoiceResponse.

         The possible values: - asr - iat - tts   # noqa: E501

        :return: The type of this SubscriptionVoiceResponse.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SubscriptionVoiceResponse.

         The possible values: - asr - iat - tts   # noqa: E501

        :param type: The type of this SubscriptionVoiceResponse.
        :type type: str
        """
        allowed_values = ["asr", "iat", "tts"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def data(self):
        """Gets the data of this SubscriptionVoiceResponse.

         Automatic speech recognition or auto transform's result.   # noqa: E501

        :return: The data of this SubscriptionVoiceResponse.
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this SubscriptionVoiceResponse.

         Automatic speech recognition or auto transform's result.   # noqa: E501

        :param data: The data of this SubscriptionVoiceResponse.
        :type data: object
        """

        self._data = data

    @property
    def timestamp(self):
        """Gets the timestamp of this SubscriptionVoiceResponse.

        Timestamp, Unix standard time.  # noqa: E501

        :return: The timestamp of this SubscriptionVoiceResponse.
        :rtype: long
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this SubscriptionVoiceResponse.

        Timestamp, Unix standard time.  # noqa: E501

        :param timestamp: The timestamp of this SubscriptionVoiceResponse.
        :type timestamp: long
        """

        self._timestamp = timestamp

    @property
    def msg(self):
        """Gets the msg of this SubscriptionVoiceResponse.

        Return code's details.  # noqa: E501

        :return: The msg of this SubscriptionVoiceResponse.
        :rtype: str
        """
        return self._msg

    @msg.setter
    def msg(self, msg):
        """Sets the msg of this SubscriptionVoiceResponse.

        Return code's details.  # noqa: E501

        :param msg: The msg of this SubscriptionVoiceResponse.
        :type msg: str
        """
        if msg is None:
            raise ValueError("Invalid value for `msg`, must not be `None`")  # noqa: E501

        self._msg = msg
