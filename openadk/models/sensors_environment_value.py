# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openadk.models.base_model_ import Model
from openadk.models.sensors_environment_info import SensorsEnvironmentInfo  # noqa: F401,E501
from openadk import util


class SensorsEnvironmentValue(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, environment=None):  # noqa: E501
        """SensorsEnvironmentValue - a model defined in Swagger

        :param environment: The environment of this SensorsEnvironmentValue.  # noqa: E501
        :type environment: List[SensorsEnvironmentInfo]
        """
        self.swagger_types = {
            'environment': List[SensorsEnvironmentInfo]
        }

        self.attribute_map = {
            'environment': 'environment'
        }

        self._environment = environment

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SensorsEnvironmentValue of this SensorsEnvironmentValue.  # noqa: E501
        :rtype: SensorsEnvironmentValue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment(self):
        """Gets the environment of this SensorsEnvironmentValue.


        :return: The environment of this SensorsEnvironmentValue.
        :rtype: List[SensorsEnvironmentInfo]
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this SensorsEnvironmentValue.


        :param environment: The environment of this SensorsEnvironmentValue.
        :type environment: List[SensorsEnvironmentInfo]
        """
        if environment is None:
            raise ValueError("Invalid value for `environment`, must not be `None`")  # noqa: E501

        self._environment = environment
