# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openadk.models.base_model_ import Model
from openadk.models.visions_age import VisionsAge  # noqa: F401,E501
from openadk.models.visions_expression import VisionsExpression  # noqa: F401,E501
from openadk.models.visions_gender import VisionsGender  # noqa: F401,E501
from openadk import util


class VisionsAnalysis(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, age=None, gender=None, expression=None):  # noqa: E501
        """VisionsAnalysis - a model defined in Swagger

        :param age: The age of this VisionsAnalysis.  # noqa: E501
        :type age: VisionsAge
        :param gender: The gender of this VisionsAnalysis.  # noqa: E501
        :type gender: VisionsGender
        :param expression: The expression of this VisionsAnalysis.  # noqa: E501
        :type expression: VisionsExpression
        """
        self.swagger_types = {
            'age': VisionsAge,
            'gender': VisionsGender,
            'expression': VisionsExpression
        }

        self.attribute_map = {
            'age': 'age',
            'gender': 'gender',
            'expression': 'expression'
        }

        self._age = age
        self._gender = gender
        self._expression = expression

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VisionsAnalysis of this VisionsAnalysis.  # noqa: E501
        :rtype: VisionsAnalysis
        """
        return util.deserialize_model(dikt, cls)

    @property
    def age(self):
        """Gets the age of this VisionsAnalysis.


        :return: The age of this VisionsAnalysis.
        :rtype: VisionsAge
        """
        return self._age

    @age.setter
    def age(self, age):
        """Sets the age of this VisionsAnalysis.


        :param age: The age of this VisionsAnalysis.
        :type age: VisionsAge
        """

        self._age = age

    @property
    def gender(self):
        """Gets the gender of this VisionsAnalysis.


        :return: The gender of this VisionsAnalysis.
        :rtype: VisionsGender
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this VisionsAnalysis.


        :param gender: The gender of this VisionsAnalysis.
        :type gender: VisionsGender
        """

        self._gender = gender

    @property
    def expression(self):
        """Gets the expression of this VisionsAnalysis.


        :return: The expression of this VisionsAnalysis.
        :rtype: VisionsExpression
        """
        return self._expression

    @expression.setter
    def expression(self, expression):
        """Sets the expression of this VisionsAnalysis.


        :param expression: The expression of this VisionsAnalysis.
        :type expression: VisionsExpression
        """

        self._expression = expression
