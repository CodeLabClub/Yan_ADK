---
swagger: "2.0"
info:
  description: "Yanshee RESTful APIs是一套专门为编程爱好者提供二次开发的接口．它通过http/https的方式向外界提供机器人控\
    制，传感器读取，机器人视觉等功能．用户还可以通过编程的方式训练自己的模型，学习一些机器学习的内容．"
  version: "1.0.0"
  title: "Yanshee RESTful API"
  termsOfService: "https://account.ubtrobot.com/gdpr/ukit/v1.0.3/TermsOfUse_en.html"
  contact:
    email: "swenggroup@ubtrobot.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "127.0.0.1:10101"
basePath: "/v1"
tags:
- name: "subscriptions"
  description: "机器人数据推送"
schemes:
- "http"
paths:
  /subscriptions/motions:
    put:
      tags:
      - "subscriptions"
      summary: "推送运动控制状态"
      description: "可以控制执行指定动作、暂停、继续、停止和复位"
      operationId: "put_motions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "运动控制的参数"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionMotionsStatusResponse"
      responses:
        200:
          description: "成功"
          schema:
            $ref: "#/definitions/SubscriptionCommonResponse"
      x-swagger-router-controller: "openadk.controllers.subscriptions_controller"
  /subscriptions/sensors/gyro:
    put:
      tags:
      - "subscriptions"
      summary: "推送传感器消息"
      description: ""
      operationId: "put_sensors_subscription"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionSensorsGyroValueResponse"
      responses:
        200:
          description: "发送成功"
          schema:
            $ref: "#/definitions/SubscriptionCommonResponse"
      x-swagger-router-controller: "openadk.controllers.subscriptions_controller"
  /subscriptions/sensors/ultrasonic:
    put:
      tags:
      - "subscriptions"
      summary: "推送传感器消息"
      description: ""
      operationId: "put_sensors_subscription_sensors_ultrasonic"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionSensorsUltrasonicValueResponse"
      responses:
        200:
          description: "发送成功"
          schema:
            $ref: "#/definitions/SubscriptionCommonResponse"
      x-swagger-router-controller: "openadk.controllers.subscriptions_controller"
  /subscriptions/sensors/infrared:
    put:
      tags:
      - "subscriptions"
      summary: "推送传感器消息"
      description: ""
      operationId: "put_sensors_subscription_sensors_infrared"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionSensorsInfraredValueResponse"
      responses:
        200:
          description: "发送成功"
          schema:
            $ref: "#/definitions/SubscriptionCommonResponse"
      x-swagger-router-controller: "openadk.controllers.subscriptions_controller"
  /subscriptions/sensors/environment:
    put:
      tags:
      - "subscriptions"
      summary: "推送传感器消息"
      description: ""
      operationId: "put_sensors_subscription_sensors_environment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionSensorsEnvironmentValueResponse"
      responses:
        200:
          description: "发送成功"
          schema:
            $ref: "#/definitions/SubscriptionCommonResponse"
      x-swagger-router-controller: "openadk.controllers.subscriptions_controller"
  /subscriptions/sensors/touch:
    put:
      tags:
      - "subscriptions"
      summary: "推送传感器消息"
      description: ""
      operationId: "put_sensors_subscription_sensors_touch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionSensorsTouchValueResponse"
      responses:
        200:
          description: "发送成功"
          schema:
            $ref: "#/definitions/SubscriptionCommonResponse"
      x-swagger-router-controller: "openadk.controllers.subscriptions_controller"
  /subscriptions/sensors/pressure:
    put:
      tags:
      - "subscriptions"
      summary: "推送传感器消息"
      description: ""
      operationId: "put_sensors_subscription_sensors_pressure"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionSensorsPressureValueResponse"
      responses:
        200:
          description: "发送成功"
          schema:
            $ref: "#/definitions/SubscriptionCommonResponse"
      x-swagger-router-controller: "openadk.controllers.subscriptions_controller"
  /subscriptions/visions:
    put:
      tags:
      - "subscriptions"
      summary: "推送指定视觉任务消息"
      description: "URL example: http://10.10.1.30:80/subscriptions/visions"
      operationId: "put_vision_subscription_visions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionVisionsGetResponse"
      responses:
        200:
          description: "发送成功"
          schema:
            $ref: "#/definitions/SubscriptionCommonResponse"
      x-swagger-router-controller: "openadk.controllers.subscriptions_controller"
  /subscriptions/voice/iat:
    put:
      tags:
      - "subscriptions"
      summary: "推送语音识别原始JSON信息"
      description: "URL example: http://10.10.1.30:80/subscriptions/voice/iat"
      operationId: "put_voice_iat_subscription_voice_iat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionVoiceResponse"
      responses:
        200:
          description: "发送成功"
          schema:
            $ref: "#/definitions/SubscriptionCommonResponse"
      x-swagger-router-controller: "openadk.controllers.subscriptions_controller"
  /subscriptions/voice/asr:
    put:
      tags:
      - "subscriptions"
      summary: "推送语义理解消息"
      description: "URL example: http://10.10.1.30:80/subscriptions/voice/asr"
      operationId: "put_voice_asr_subscriptions_voice_asr"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionVoiceResponse"
      responses:
        200:
          description: "发送成功"
          schema:
            $ref: "#/definitions/SubscriptionCommonResponse"
      x-swagger-router-controller: "openadk.controllers.subscriptions_controller"
  /subscriptions/voice/tts:
    put:
      tags:
      - "subscriptions"
      summary: "推送TTS状态消息"
      description: "URL example: http://10.10.1.30:80/tts"
      operationId: "put_tts_subscriptions_voice_tts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionCommonResponse"
      responses:
        200:
          description: "发送成功"
          schema:
            $ref: "#/definitions/SubscriptionCommonResponse"
      x-swagger-router-controller: "openadk.controllers.subscriptions_controller"
definitions:
  SubscriptionName:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
    xml:
      name: "SubscriptionName"
    example:
      name: "name"
  SubscriptionVisionsResults:
    type: "object"
    properties:
      analysis:
        $ref: "#/definitions/SubscriptionVisionsAnalysis"
      recognition:
        $ref: "#/definitions/SubscriptionName"
      quantity:
        type: "integer"
        example: 1
        description: "数量, 0 ~ ??? (整数)"
        minimum: 0
      color:
        type: "array"
        example:
        - name: "black"
        - name: "gray"
        - name: "red"
        - name: "blue"
        description: "所有可返回的颜色列表, 列表值有 'none', 'black', 'gray', 'white', 'red', 'orange',\
          \ 'yellow', 'green', 'cyan', 'blue', 'purple'"
        items:
          $ref: "#/definitions/SubscriptionName"
    xml:
      name: "SubscriptionVisionsResults"
    example:
      quantity: 1
      color:
      - name: "black"
      - name: "gray"
      - name: "red"
      - name: "blue"
      recognition:
        name: "name"
      analysis:
        gender:
          gender: "male"
        age:
          age: 5
          group: "baby"
  SubscriptionVisionsGetResponse:
    type: "object"
    required:
    - "code"
    - "msg"
    - "type"
    properties:
      code:
        type: "integer"
        example: 0
        description: "返回码，0表示正常"
      type:
        type: "string"
        description: "消息类型。 一次只返回一种类型的数据。 type 允许的值为: 'recognition', 'tracking','gender',\
          \ 'age_group', 'quantity', 'color_detect'"
        enum:
        - "recognition"
        - "tracking"
        - "gender"
        - "age_group"
        - "quantity"
        - "color_detect"
      data:
        $ref: "#/definitions/SubscriptionVisionsResults"
      timestamp:
        type: "integer"
        format: "int64"
        example: 1551838515
        description: "任务时间戳"
      status:
        type: "string"
        example: "idle"
        description: "状态"
      msg:
        type: "string"
        example: "Success"
        description: "提示信息"
    xml:
      name: "SubscriptionVisionsGetResponse"
    example:
      msg: "Success"
      code: 0
      data:
        quantity: 1
        color:
        - name: "black"
        - name: "gray"
        - name: "red"
        - name: "blue"
        recognition:
          name: "name"
        analysis:
          gender:
            gender: "male"
          age:
            age: 5
            group: "baby"
      type: "recognition"
      timestamp: 1551838515
      status: "idle"
  SubscriptionVoiceResponse:
    type: "object"
    required:
    - "code"
    - "msg"
    - "type"
    properties:
      code:
        type: "integer"
        example: 0
        description: "返回码，0表示正常"
      type:
        type: "string"
        example: "asr"
        description: "消息类型。此处的参数有 'asr', 'iat' "
        enum:
        - "asr"
        - "iat"
      data:
        type: "object"
        example: {}
        description: "数据"
        properties: {}
      timestamp:
        type: "integer"
        format: "int64"
        example: 1000789666
        description: "时间戳"
      msg:
        type: "string"
        description: "提示信息"
    xml:
      name: "SubscriptionVoiceResponse"
    description: "asr与iat推送JSON"
    example:
      msg: "msg"
      code: 0
      data: {}
      type: "asr"
      timestamp: 1000789666
  SubscriptionCommonResponse:
    type: "object"
    required:
    - "code"
    - "data"
    - "msg"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "返回码，0表示正常"
      data:
        type: "object"
        example: {}
        properties: {}
      msg:
        type: "string"
        example: "Success"
        description: "提示信息"
    xml:
      name: "SubscriptionCommonResponse"
    example:
      msg: "Success"
      code: 0
      data: {}
  SubscriptionSensorsEnvironmentInfo:
    type: "object"
    required:
    - "humidity"
    - "id"
    - "temperature"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 54
        minimum: 1
        maximum: 127
      slot:
        type: "integer"
        format: "int32"
        example: 1
        description: "传感器槽位号"
        minimum: 1
        maximum: 6
      temperature:
        type: "integer"
        format: "int32"
        example: 25
        description: "温度值"
      humidity:
        type: "integer"
        format: "int32"
        example: 75
        description: "湿度值"
      pressure:
        type: "integer"
        format: "int32"
        example: 1003
        description: "大气压力"
    xml:
      name: "SubscriptionSensorsEnvironmentInfo"
    example:
      temperature: 25
      humidity: 75
      id: 54
      slot: 1
      pressure: 1003
  SubscriptionSensorsEnvironmentValue:
    type: "object"
    required:
    - "environment"
    properties:
      environment:
        type: "array"
        items:
          $ref: "#/definitions/SubscriptionSensorsEnvironmentInfo"
    xml:
      name: "SubscriptionSensorsEnvironmentValue"
    example:
      environment:
      - temperature: 25
        humidity: 75
        id: 54
        slot: 1
        pressure: 1003
      - temperature: 25
        humidity: 75
        id: 54
        slot: 1
        pressure: 1003
  SubscriptionSensorsEnvironmentValueResponse:
    type: "object"
    required:
    - "code"
    - "data"
    - "msg"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "返回码，0表示正常"
      data:
        $ref: "#/definitions/SubscriptionSensorsEnvironmentValue"
      msg:
        type: "string"
        example: "Success"
        description: "提示信息"
    xml:
      name: "SubscriptionSensorsEnvironmentValueResponse"
    example:
      msg: "Success"
      code: 0
      data:
        environment:
        - temperature: 25
          humidity: 75
          id: 54
          slot: 1
          pressure: 1003
        - temperature: 25
          humidity: 75
          id: 54
          slot: 1
          pressure: 1003
  SubscriptionSensorsInfraredInfo:
    type: "object"
    required:
    - "id"
    - "value"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 23
        description: "传感器地址"
        minimum: 1
        maximum: 127
      slot:
        type: "integer"
        format: "int32"
        example: 1
        description: "传感器槽位号"
        minimum: 1
        maximum: 6
      value:
        type: "integer"
        format: "int32"
        example: 25
        description: "距离值，单位毫米"
    xml:
      name: "SubscriptionSensorsInfraredInfo"
    example:
      id: 23
      slot: 1
      value: 25
  SubscriptionSensorsInfraredValue:
    type: "object"
    required:
    - "infrared"
    properties:
      infrared:
        type: "array"
        items:
          $ref: "#/definitions/SubscriptionSensorsInfraredInfo"
    xml:
      name: "SubscriptionSensorsInfraredValue"
    example:
      infrared:
      - id: 23
        slot: 1
        value: 25
      - id: 23
        slot: 1
        value: 25
  SubscriptionSensorsInfraredValueResponse:
    type: "object"
    required:
    - "code"
    - "data"
    - "msg"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "返回码，0表示正常"
      data:
        $ref: "#/definitions/SubscriptionSensorsInfraredValue"
      msg:
        type: "string"
        example: "Success"
        description: "提示信息"
    xml:
      name: "SubscriptionSensorsInfraredValueResponse"
    example:
      msg: "Success"
      code: 0
      data:
        infrared:
        - id: 23
          slot: 1
          value: 25
        - id: 23
          slot: 1
          value: 25
  SubscriptionSensorsPressureInfo:
    type: "object"
    required:
    - "id"
    - "value"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 35
        description: "传感器地址"
        minimum: 1
        maximum: 127
      slot:
        type: "integer"
        format: "int32"
        example: 1
        description: "传感器槽位号"
        minimum: 1
        maximum: 6
      value:
        type: "integer"
        format: "int32"
        example: 25
        description: "压力值，单位：牛"
    xml:
      name: "SubscriptionSensorsPressureInfo"
    example:
      id: 35
      slot: 1
      value: 25
  SubscriptionSensorsPressureValue:
    type: "object"
    required:
    - "pressure"
    properties:
      pressure:
        type: "array"
        items:
          $ref: "#/definitions/SubscriptionSensorsPressureInfo"
    xml:
      name: "SubscriptionSensorsUltrasonicValue"
    example:
      pressure:
      - id: 35
        slot: 1
        value: 25
      - id: 35
        slot: 1
        value: 25
  SubscriptionSensorsPressureValueResponse:
    type: "object"
    required:
    - "code"
    - "data"
    - "msg"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "返回码，0表示正常"
      data:
        $ref: "#/definitions/SubscriptionSensorsPressureValue"
      msg:
        type: "string"
        example: "Success"
        description: "提示信息"
    xml:
      name: "SubscriptionSensorsPressureValueResponse"
    example:
      msg: "Success"
      code: 0
      data:
        pressure:
        - id: 35
          slot: 1
          value: 25
        - id: 35
          slot: 1
          value: 25
  SubscriptionSensorsTouchInfo:
    type: "object"
    required:
    - "id"
    - "value"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 29
        description: "传感器地址"
        minimum: 1
        maximum: 127
      slot:
        type: "integer"
        format: "int32"
        example: 1
        description: "传感器槽位号"
        minimum: 1
        maximum: 6
      value:
        type: "integer"
        format: "int32"
        example: 25
        description: "值说明：0未触摸，1触摸btn1，2触摸btn2，3触摸两边"
    xml:
      name: "SubscriptionSensorsTouchInfo"
    example:
      id: 29
      slot: 1
      value: 25
  SubscriptionSensorsTouchValue:
    type: "object"
    required:
    - "touch"
    properties:
      touch:
        type: "array"
        items:
          $ref: "#/definitions/SubscriptionSensorsTouchInfo"
    xml:
      name: "SubscriptionSensorsTouchValue"
    example:
      touch:
      - id: 29
        slot: 1
        value: 25
      - id: 29
        slot: 1
        value: 25
  SubscriptionSensorsTouchValueResponse:
    type: "object"
    required:
    - "code"
    - "data"
    - "msg"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "返回码，0表示正常"
      data:
        $ref: "#/definitions/SubscriptionSensorsTouchValue"
      msg:
        type: "string"
        example: "Success"
        description: "提示信息"
    xml:
      name: "SubscriptionSensorsTouchValueResponse"
    example:
      msg: "Success"
      code: 0
      data:
        touch:
        - id: 29
          slot: 1
          value: 25
        - id: 29
          slot: 1
          value: 25
  SubscriptionSensorsUltrasonicInfo:
    type: "object"
    required:
    - "id"
    - "value"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 17
        description: "传感器地址"
        minimum: 1
        maximum: 127
      slot:
        type: "integer"
        format: "int32"
        example: 1
        description: "传感器槽位号"
        minimum: 1
        maximum: 6
      value:
        type: "integer"
        format: "int32"
        example: 25
        description: "距离值，单位毫米"
    xml:
      name: "SubscriptionSensorsUltrasonicInfo"
    example:
      id: 17
      slot: 1
      value: 25
  SubscriptionSensorsUltrasonicValue:
    type: "object"
    required:
    - "ultrasonic"
    properties:
      ultrasonic:
        type: "array"
        items:
          $ref: "#/definitions/SubscriptionSensorsUltrasonicInfo"
    xml:
      name: "SubscriptionSensorsUltrasonicValue"
    example:
      ultrasonic:
      - id: 17
        slot: 1
        value: 25
      - id: 17
        slot: 1
        value: 25
  SubscriptionSensorsUltrasonicValueResponse:
    type: "object"
    required:
    - "code"
    - "data"
    - "msg"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "返回码，0表示正常"
      data:
        $ref: "#/definitions/SubscriptionSensorsUltrasonicValue"
      msg:
        type: "string"
        example: "Success"
        description: "提示信息"
    xml:
      name: "SubscriptionSensorsUltrasonicValueResponse"
    example:
      msg: "Success"
      code: 0
      data:
        ultrasonic:
        - id: 17
          slot: 1
          value: 25
        - id: 17
          slot: 1
          value: 25
  SubscriptionSensorsGyroInfo:
    type: "object"
    required:
    - "euler-x"
    - "euler-y"
    - "euler-z"
    - "id"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: 52
        minimum: 1
        maximum: 127
      gyro-x:
        type: "number"
        format: "float"
        example: 0.1021
      gyro-y:
        type: "number"
        format: "float"
        example: 0.602
      gyro-z:
        type: "number"
        format: "float"
        example: 0.0213
      accel-x:
        type: "number"
        format: "float"
        example: 0.147949
      accel-y:
        type: "number"
        format: "float"
        example: 0.116699
      accel-z:
        type: "number"
        example: 0.813477
      compass-x:
        type: "number"
        format: "float"
        example: 0.1021
      compass-y:
        type: "number"
        format: "float"
        example: 0.602
      compass-z:
        type: "number"
        format: "float"
        example: 0.01232
      euler-x:
        type: "number"
        format: "float"
        example: 8.073578
      euler-y:
        type: "number"
        format: "float"
        example: -10.11795
      euler-z:
        type: "number"
        format: "float"
        example: 0.72052
    xml:
      name: "SubscriptionSensorsGyroInfo"
    example:
      euler-y: -10.11795
      euler-x: 8.073578
      euler-z: 0.72052
      compass-x: 0.1021
      compass-y: 0.602
      compass-z: 0.01232
      gyro-y: 0.602
      accel-y: 0.116699
      id: 52
      gyro-x: 0.1021
      accel-z: 0.813477
      gyro-z: 0.0213
      accel-x: 0.147949
  SubscriptionSensorsGyroValue:
    type: "object"
    required:
    - "gyro"
    properties:
      gyro:
        type: "array"
        items:
          $ref: "#/definitions/SubscriptionSensorsGyroInfo"
    xml:
      name: "SubscriptionSensorsGyroValue"
    example:
      gyro:
      - euler-y: -10.11795
        euler-x: 8.073578
        euler-z: 0.72052
        compass-x: 0.1021
        compass-y: 0.602
        compass-z: 0.01232
        gyro-y: 0.602
        accel-y: 0.116699
        id: 52
        gyro-x: 0.1021
        accel-z: 0.813477
        gyro-z: 0.0213
        accel-x: 0.147949
      - euler-y: -10.11795
        euler-x: 8.073578
        euler-z: 0.72052
        compass-x: 0.1021
        compass-y: 0.602
        compass-z: 0.01232
        gyro-y: 0.602
        accel-y: 0.116699
        id: 52
        gyro-x: 0.1021
        accel-z: 0.813477
        gyro-z: 0.0213
        accel-x: 0.147949
  SubscriptionSensorsGyroValueResponse:
    type: "object"
    required:
    - "code"
    - "data"
    - "msg"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "返回码，0表示正常"
      data:
        $ref: "#/definitions/SubscriptionSensorsGyroValue"
      msg:
        type: "string"
        example: "Success"
        description: "提示信息"
    xml:
      name: "SubscriptionSensorsGyroValueResponse"
    example:
      msg: "Success"
      code: 0
      data:
        gyro:
        - euler-y: -10.11795
          euler-x: 8.073578
          euler-z: 0.72052
          compass-x: 0.1021
          compass-y: 0.602
          compass-z: 0.01232
          gyro-y: 0.602
          accel-y: 0.116699
          id: 52
          gyro-x: 0.1021
          accel-z: 0.813477
          gyro-z: 0.0213
          accel-x: 0.147949
        - euler-y: -10.11795
          euler-x: 8.073578
          euler-z: 0.72052
          compass-x: 0.1021
          compass-y: 0.602
          compass-z: 0.01232
          gyro-y: 0.602
          accel-y: 0.116699
          id: 52
          gyro-x: 0.1021
          accel-z: 0.813477
          gyro-z: 0.0213
          accel-x: 0.147949
  SubscriptionMotionsStatus:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        description: "运行状态"
        enum:
        - "idle"
        - "run"
        - "pause"
      name:
        type: "string"
        description: "动作名"
        default: "None"
      timestamp:
        type: "integer"
        format: "int64"
        example: 1551838515
        description: "时间戳, Unix标准时间"
    example:
      name: "None"
      status: "idle"
      timestamp: 1551838515
  SubscriptionMotionsStatusResponse:
    type: "object"
    required:
    - "code"
    - "data"
    - "msg"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "返回码，0表示正常"
      data:
        $ref: "#/definitions/SubscriptionMotionsStatus"
      msg:
        type: "string"
        example: "Success"
        description: "提示信息"
    xml:
      name: "SubscriptionMotionsStatusResponse"
    example:
      msg: "Success"
      code: 0
      data:
        name: "None"
        status: "idle"
        timestamp: 1551838515
  SubscriptionVisionsGender:
    type: "object"
    required:
    - "gender"
    properties:
      gender:
        type: "string"
        description: "性别。此处的值有 'male', 'female', 'none' 其中 'none' 为初始不存在"
        enum:
        - "male"
        - "female"
        - "none"
    xml:
      name: "SubscriptionVisionsGender"
    example:
      gender: "male"
  SubscriptionVisionsAge:
    type: "object"
    properties:
      age:
        type: "integer"
        example: 5
        description: "年龄"
        minimum: 0
      group:
        type: "string"
        example: "baby"
        description: "年龄段。 返回值有: 'baby', 'children', 'juvenile', 'youth', 'middle_age',\
          \ 'old_age', 'none' "
    xml:
      name: "SubscriptionVisionsAge"
    example:
      age: 5
      group: "baby"
  SubscriptionVisionsAnalysis:
    type: "object"
    properties:
      age:
        $ref: "#/definitions/SubscriptionVisionsAge"
      gender:
        $ref: "#/definitions/SubscriptionVisionsGender"
    xml:
      name: "SubscriptionVisionsAnalysis"
    example:
      gender:
        gender: "male"
      age:
        age: 5
        group: "baby"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
