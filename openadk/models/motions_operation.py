# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openadk.models.base_model_ import Model
from openadk.models.motions_parameter import MotionsParameter  # noqa: F401,E501
from openadk import util


class MotionsOperation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, operation='start', motion=None, timestamp=None):  # noqa: E501
        """MotionsOperation - a model defined in Swagger

        :param operation: The operation of this MotionsOperation.  # noqa: E501
        :type operation: str
        :param motion: The motion of this MotionsOperation.  # noqa: E501
        :type motion: MotionsParameter
        :param timestamp: The timestamp of this MotionsOperation.  # noqa: E501
        :type timestamp: int
        """
        self.swagger_types = {
            'operation': str,
            'motion': MotionsParameter,
            'timestamp': int
        }

        self.attribute_map = {
            'operation': 'operation',
            'motion': 'motion',
            'timestamp': 'timestamp'
        }

        self._operation = operation
        self._motion = motion
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MotionsOperation of this MotionsOperation.  # noqa: E501
        :rtype: MotionsOperation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation(self):
        """Gets the operation of this MotionsOperation.

        运动控制  # noqa: E501

        :return: The operation of this MotionsOperation.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this MotionsOperation.

        运动控制  # noqa: E501

        :param operation: The operation of this MotionsOperation.
        :type operation: str
        """
        allowed_values = ["start", "pause", "resume", "reset", "stop"]  # noqa: E501
        if operation not in allowed_values:
            raise ValueError(
                "Invalid value for `operation` ({0}), must be one of {1}"
                .format(operation, allowed_values)
            )

        self._operation = operation

    @property
    def motion(self):
        """Gets the motion of this MotionsOperation.


        :return: The motion of this MotionsOperation.
        :rtype: MotionsParameter
        """
        return self._motion

    @motion.setter
    def motion(self, motion):
        """Sets the motion of this MotionsOperation.


        :param motion: The motion of this MotionsOperation.
        :type motion: MotionsParameter
        """

        self._motion = motion

    @property
    def timestamp(self):
        """Gets the timestamp of this MotionsOperation.


        :return: The timestamp of this MotionsOperation.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this MotionsOperation.


        :param timestamp: The timestamp of this MotionsOperation.
        :type timestamp: int
        """

        self._timestamp = timestamp
