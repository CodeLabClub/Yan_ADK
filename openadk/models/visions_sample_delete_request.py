# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openadk.models.base_model_ import Model
from openadk import util


class VisionsSampleDeleteRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, option=None, tag=None, name=None):  # noqa: E501
        """VisionsSampleDeleteRequest - a model defined in Swagger

        :param option: The option of this VisionsSampleDeleteRequest.  # noqa: E501
        :type option: str
        :param tag: The tag of this VisionsSampleDeleteRequest.  # noqa: E501
        :type tag: str
        :param name: The name of this VisionsSampleDeleteRequest.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'option': str,
            'tag': str,
            'name': str
        }

        self.attribute_map = {
            'option': 'option',
            'tag': 'tag',
            'name': 'name'
        }

        self._option = option
        self._tag = tag
        self._name = name

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VisionsSampleDeleteRequest of this VisionsSampleDeleteRequest.  # noqa: E501
        :rtype: VisionsSampleDeleteRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def option(self):
        """Gets the option of this VisionsSampleDeleteRequest.

        删除单个样本数据还是整个样本。可选值: 'file'(单个数据), 'sample'(整个样本)  # noqa: E501

        :return: The option of this VisionsSampleDeleteRequest.
        :rtype: str
        """
        return self._option

    @option.setter
    def option(self, option):
        """Sets the option of this VisionsSampleDeleteRequest.

        删除单个样本数据还是整个样本。可选值: 'file'(单个数据), 'sample'(整个样本)  # noqa: E501

        :param option: The option of this VisionsSampleDeleteRequest.
        :type option: str
        """
        allowed_values = ["file", "sample"]  # noqa: E501
        if option not in allowed_values:
            raise ValueError(
                "Invalid value for `option` ({0}), must be one of {1}"
                .format(option, allowed_values)
            )

        self._option = option

    @property
    def tag(self):
        """Gets the tag of this VisionsSampleDeleteRequest.

        样本名称  # noqa: E501

        :return: The tag of this VisionsSampleDeleteRequest.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this VisionsSampleDeleteRequest.

        样本名称  # noqa: E501

        :param tag: The tag of this VisionsSampleDeleteRequest.
        :type tag: str
        """
        if tag is None:
            raise ValueError("Invalid value for `tag`, must not be `None`")  # noqa: E501

        self._tag = tag

    @property
    def name(self):
        """Gets the name of this VisionsSampleDeleteRequest.

        数据名称  # noqa: E501

        :return: The name of this VisionsSampleDeleteRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VisionsSampleDeleteRequest.

        数据名称  # noqa: E501

        :param name: The name of this VisionsSampleDeleteRequest.
        :type name: str
        """

        self._name = name
