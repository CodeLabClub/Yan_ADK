# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openadk.models.base_model_ import Model
from openadk import util


class DevicesVersions(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, core=None, servo=None, sn=None):  # noqa: E501
        """DevicesVersions - a model defined in Swagger

        :param core: The core of this DevicesVersions.  # noqa: E501
        :type core: str
        :param servo: The servo of this DevicesVersions.  # noqa: E501
        :type servo: str
        :param sn: The sn of this DevicesVersions.  # noqa: E501
        :type sn: str
        """
        self.swagger_types = {
            'core': str,
            'servo': str,
            'sn': str
        }

        self.attribute_map = {
            'core': 'core',
            'servo': 'servo',
            'sn': 'sn'
        }

        self._core = core
        self._servo = servo
        self._sn = sn

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DevicesVersions of this DevicesVersions.  # noqa: E501
        :rtype: DevicesVersions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def core(self):
        """Gets the core of this DevicesVersions.


        :return: The core of this DevicesVersions.
        :rtype: str
        """
        return self._core

    @core.setter
    def core(self, core):
        """Sets the core of this DevicesVersions.


        :param core: The core of this DevicesVersions.
        :type core: str
        """

        self._core = core

    @property
    def servo(self):
        """Gets the servo of this DevicesVersions.


        :return: The servo of this DevicesVersions.
        :rtype: str
        """
        return self._servo

    @servo.setter
    def servo(self, servo):
        """Sets the servo of this DevicesVersions.


        :param servo: The servo of this DevicesVersions.
        :type servo: str
        """

        self._servo = servo

    @property
    def sn(self):
        """Gets the sn of this DevicesVersions.


        :return: The sn of this DevicesVersions.
        :rtype: str
        """
        return self._sn

    @sn.setter
    def sn(self, sn):
        """Sets the sn of this DevicesVersions.


        :param sn: The sn of this DevicesVersions.
        :type sn: str
        """

        self._sn = sn
