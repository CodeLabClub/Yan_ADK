# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openadk.models.base_model_ import Model
from openadk.models.subscription_sensors_gyro_info import SubscriptionSensorsGyroInfo  # noqa: F401,E501
from openadk import util


class SubscriptionSensorsGyroValue(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, gyro=None):  # noqa: E501
        """SubscriptionSensorsGyroValue - a model defined in Swagger

        :param gyro: The gyro of this SubscriptionSensorsGyroValue.  # noqa: E501
        :type gyro: List[SubscriptionSensorsGyroInfo]
        """
        self.swagger_types = {
            'gyro': List[SubscriptionSensorsGyroInfo]
        }

        self.attribute_map = {
            'gyro': 'gyro'
        }

        self._gyro = gyro

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SubscriptionSensorsGyroValue of this SubscriptionSensorsGyroValue.  # noqa: E501
        :rtype: SubscriptionSensorsGyroValue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gyro(self):
        """Gets the gyro of this SubscriptionSensorsGyroValue.


        :return: The gyro of this SubscriptionSensorsGyroValue.
        :rtype: List[SubscriptionSensorsGyroInfo]
        """
        return self._gyro

    @gyro.setter
    def gyro(self, gyro):
        """Sets the gyro of this SubscriptionSensorsGyroValue.


        :param gyro: The gyro of this SubscriptionSensorsGyroValue.
        :type gyro: List[SubscriptionSensorsGyroInfo]
        """
        if gyro is None:
            raise ValueError("Invalid value for `gyro`, must not be `None`")  # noqa: E501

        self._gyro = gyro
