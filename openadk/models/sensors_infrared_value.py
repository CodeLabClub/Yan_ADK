# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openadk.models.base_model_ import Model
from openadk.models.sensors_common_info import SensorsCommonInfo  # noqa: F401,E501
from openadk import util


class SensorsInfraredValue(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, infrared=None):  # noqa: E501
        """SensorsInfraredValue - a model defined in Swagger

        :param infrared: The infrared of this SensorsInfraredValue.  # noqa: E501
        :type infrared: List[SensorsCommonInfo]
        """
        self.swagger_types = {
            'infrared': List[SensorsCommonInfo]
        }

        self.attribute_map = {
            'infrared': 'infrared'
        }

        self._infrared = infrared

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SensorsInfraredValue of this SensorsInfraredValue.  # noqa: E501
        :rtype: SensorsInfraredValue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def infrared(self):
        """Gets the infrared of this SensorsInfraredValue.


        :return: The infrared of this SensorsInfraredValue.
        :rtype: List[SensorsCommonInfo]
        """
        return self._infrared

    @infrared.setter
    def infrared(self, infrared):
        """Sets the infrared of this SensorsInfraredValue.


        :param infrared: The infrared of this SensorsInfraredValue.
        :type infrared: List[SensorsCommonInfo]
        """
        if infrared is None:
            raise ValueError("Invalid value for `infrared`, must not be `None`")  # noqa: E501

        self._infrared = infrared
