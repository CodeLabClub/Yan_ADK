# coding: utf-8

"""
    Yanshee RESTful API

     ## Overview Yanshee RESTful APIs are generated by the [swagger-codegen](https://github.com/swagger-api/swagger-codegen) project. By using the [OpenAPI-Spec](https://github.com/swagger-api/swagger-core/wiki) from a remote server. The API service uses the [Connexion](https://github.com/zalando/connexion) library on top of Flask.  To provide the API service, Yanshee RESTful APIs are integrated into apollo package, it is a part of Yanshee-ROS framework. Yanshee RESTful APIs provided two language versions: - [English version](https://app.swaggerhub.com/apis-docs/UBTEDU/apollo_en/1.0.0) - [Chinese version](https://app.swaggerhub.com/apis-docs/UBTEDU/apollo_cn/1.0.0)  ## Requirements. Python 2.7 or 3.4+  ## Getting Started Please follow the [installation procedure](#installation--usage) and then run the following:  ``` from __future__ import print_function import time import openadk from openadk.rest import ApiException from pprint import pprint  # create an instance of the API class configuration = openadk.Configuration() configuration.host = 'http://192.168.1.100:9090/v1' api_instance = openadk.DevicesApi(openadk.ApiClient(configuration)) try:  # Get system's battery information  api_response = api_instance.get_devices_battery()  pprint(api_response) except ApiException as e:  print(\"Exception when calling DevicesApi->get_devices_battery: %s\" % e)  ```   # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: swenggroup@ubtrobot.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import openadk
from openadk.api.voice_api import VoiceApi  # noqa: E501
from openadk.rest import ApiException


class TestVoiceApi(unittest.TestCase):
    """VoiceApi unit test stubs"""

    def setUp(self):
        self.api = openadk.api.voice_api.VoiceApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_delete_voice_asr(self):
        """Test case for delete_voice_asr

        Stop automatic speech recognition  # noqa: E501
        """
        pass

    def test_delete_voice_iat(self):
        """Test case for delete_voice_iat

        Stop auto transform  # noqa: E501
        """
        pass

    def test_delete_voice_offline_syntax(self):
        """Test case for delete_voice_offline_syntax

        Delete a offline grammar based offline grammar's name  # noqa: E501
        """
        pass

    def test_delete_voice_tts(self):
        """Test case for delete_voice_tts

        Stop all text to speech  # noqa: E501
        """
        pass

    def test_get_voice_asr(self):
        """Test case for get_voice_asr

        Get automatic speech recognition working status  # noqa: E501
        """
        pass

    def test_get_voice_iat(self):
        """Test case for get_voice_iat

        Get auto transform(iat) result  # noqa: E501
        """
        pass

    def test_get_voice_offline_syntax(self):
        """Test case for get_voice_offline_syntax

        Get offline grammar configuration  # noqa: E501
        """
        pass

    def test_get_voice_offline_syntax_grammars(self):
        """Test case for get_voice_offline_syntax_grammars

        Get offline grammars' name  # noqa: E501
        """
        pass

    def test_get_voice_tts(self):
        """Test case for get_voice_tts

        Get specified or current working status  # noqa: E501
        """
        pass

    def test_post_voice_offline_syntax(self):
        """Test case for post_voice_offline_syntax

        Add a new offline grammar  # noqa: E501
        """
        pass

    def test_put_voice_asr(self):
        """Test case for put_voice_asr

        Start automatic speech recognition  # noqa: E501
        """
        pass

    def test_put_voice_iat(self):
        """Test case for put_voice_iat

        Start auto transform  # noqa: E501
        """
        pass

    def test_put_voice_offline_syntax(self):
        """Test case for put_voice_offline_syntax

        Update offline grammar based grammar's name  # noqa: E501
        """
        pass

    def test_put_voice_tts(self):
        """Test case for put_voice_tts

        Start text to speech  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
