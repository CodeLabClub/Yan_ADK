# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openadk.models.base_model_ import Model
from openadk import util


class VoiceResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, code=None, type=None, data=None, msg=None):  # noqa: E501
        """VoiceResponse - a model defined in Swagger

        :param code: The code of this VoiceResponse.  # noqa: E501
        :type code: int
        :param type: The type of this VoiceResponse.  # noqa: E501
        :type type: str
        :param data: The data of this VoiceResponse.  # noqa: E501
        :type data: str
        :param msg: The msg of this VoiceResponse.  # noqa: E501
        :type msg: str
        """
        self.swagger_types = {
            'code': int,
            'type': str,
            'data': str,
            'msg': str
        }

        self.attribute_map = {
            'code': 'code',
            'type': 'type',
            'data': 'data',
            'msg': 'msg'
        }

        self._code = code
        self._type = type
        self._data = data
        self._msg = msg

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VoiceResponse of this VoiceResponse.  # noqa: E501
        :rtype: VoiceResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this VoiceResponse.

        错误码  # noqa: E501

        :return: The code of this VoiceResponse.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this VoiceResponse.

        错误码  # noqa: E501

        :param code: The code of this VoiceResponse.
        :type code: int
        """
        if code is None:
            raise ValueError("Invalid value for `code`, must not be `None`")  # noqa: E501

        self._code = code

    @property
    def type(self):
        """Gets the type of this VoiceResponse.

        消息类型。此处的参数有 'asr', 'iat'   # noqa: E501

        :return: The type of this VoiceResponse.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VoiceResponse.

        消息类型。此处的参数有 'asr', 'iat'   # noqa: E501

        :param type: The type of this VoiceResponse.
        :type type: str
        """
        allowed_values = ["asr", "iat"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def data(self):
        """Gets the data of this VoiceResponse.

        数据  # noqa: E501

        :return: The data of this VoiceResponse.
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this VoiceResponse.

        数据  # noqa: E501

        :param data: The data of this VoiceResponse.
        :type data: str
        """

        self._data = data

    @property
    def msg(self):
        """Gets the msg of this VoiceResponse.

        错误码消息  # noqa: E501

        :return: The msg of this VoiceResponse.
        :rtype: str
        """
        return self._msg

    @msg.setter
    def msg(self, msg):
        """Sets the msg of this VoiceResponse.

        错误码消息  # noqa: E501

        :param msg: The msg of this VoiceResponse.
        :type msg: str
        """
        if msg is None:
            raise ValueError("Invalid value for `msg`, must not be `None`")  # noqa: E501

        self._msg = msg
