# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openadk.models.base_model_ import Model
from openadk import util


class SubscriptionVisionsAge(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, age=None, group=None):  # noqa: E501
        """SubscriptionVisionsAge - a model defined in Swagger

        :param age: The age of this SubscriptionVisionsAge.  # noqa: E501
        :type age: int
        :param group: The group of this SubscriptionVisionsAge.  # noqa: E501
        :type group: str
        """
        self.swagger_types = {
            'age': int,
            'group': str
        }

        self.attribute_map = {
            'age': 'age',
            'group': 'group'
        }

        self._age = age
        self._group = group

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SubscriptionVisionsAge of this SubscriptionVisionsAge.  # noqa: E501
        :rtype: SubscriptionVisionsAge
        """
        return util.deserialize_model(dikt, cls)

    @property
    def age(self):
        """Gets the age of this SubscriptionVisionsAge.

        年龄  # noqa: E501

        :return: The age of this SubscriptionVisionsAge.
        :rtype: int
        """
        return self._age

    @age.setter
    def age(self, age):
        """Sets the age of this SubscriptionVisionsAge.

        年龄  # noqa: E501

        :param age: The age of this SubscriptionVisionsAge.
        :type age: int
        """
        if age is not None and age < 0:  # noqa: E501
            raise ValueError("Invalid value for `age`, must be a value greater than or equal to `0`")  # noqa: E501

        self._age = age

    @property
    def group(self):
        """Gets the group of this SubscriptionVisionsAge.

        年龄段。 返回值有: 'baby', 'children', 'juvenile', 'youth', 'middle_age', 'old_age', 'none'   # noqa: E501

        :return: The group of this SubscriptionVisionsAge.
        :rtype: str
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this SubscriptionVisionsAge.

        年龄段。 返回值有: 'baby', 'children', 'juvenile', 'youth', 'middle_age', 'old_age', 'none'   # noqa: E501

        :param group: The group of this SubscriptionVisionsAge.
        :type group: str
        """

        self._group = group
